<?xml version="1.0" encoding="UTF-8"?>
<?python
import pandas as pd
import sys
def attributetest(row, column):
    if hasattr(row, column) and pd.notna(row[column]) and not str(row[column]).isspace():
        return True 
def mandatorytest(row, column, index):
    if hasattr(row, column) and pd.notna(row[column]) and not str(row[column]).isspace():
        return True 
    else:
        print("MISSING VALUE ERROR: The mandatory column '"+ str(column) + "' is not filled in at row '" + str(index) + "'" + "\n")
        sys.exit("This process is terminated")
?>
<SAMPLE_SET xmlns:py="http://genshi.edgewall.org/"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="ftp://ftp.sra.ebi.ac.uk/meta/xsd/sra_1_6/SRA.sample.xsd">
    <py:for each="index, row in df.iterrows()">
    <SAMPLE alias="${row.alias}" center_name="${center}">
        <py:if test="mandatorytest(row, 'title', index)">
        <TITLE>${row.title}</TITLE>
        </py:if>
        <SAMPLE_NAME>
            <py:if test="mandatorytest(row, 'taxon_id', index)">
            <TAXON_ID>${row.taxon_id}</TAXON_ID>
            </py:if>
            <SCIENTIFIC_NAME>${row.scientific_name}</SCIENTIFIC_NAME>
            <py:if test="attributetest(row, 'common_name')">
            <COMMON_NAME>${row.common_name}</COMMON_NAME>
            </py:if>
        </SAMPLE_NAME>
        <py:if test="attributetest(row, 'sample_description')">
        <DESCRIPTION>${row.sample_description}</DESCRIPTION>
        </py:if>
        <SAMPLE_ATTRIBUTES>
            <py:if test="attributetest(row, 'relationship to oxygen')">
            <SAMPLE_ATTRIBUTE>
                <TAG>relationship to oxygen</TAG>
                <VALUE>${row['relationship to oxygen']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample collection device')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample collection device</TAG>
                <VALUE>${row['sample collection device']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample collection method')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample collection method</TAG>
                <VALUE>${row['sample collection method']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'metagenomic source', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>metagenomic source</TAG>
                <VALUE>${row['metagenomic source']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'sample derived from', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample derived from</TAG>
                <VALUE>${row['sample derived from']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'project name', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>project name</TAG>
                <VALUE>${row['project name']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'multiplex identifiers')">
            <SAMPLE_ATTRIBUTE>
                <TAG>multiplex identifiers</TAG>
                <VALUE>${row['multiplex identifiers']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'relevant electronic resources')">
            <SAMPLE_ATTRIBUTE>
                <TAG>relevant electronic resources</TAG>
                <VALUE>${row['relevant electronic resources']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'relevant standard operating procedures')">
            <SAMPLE_ATTRIBUTE>
                <TAG>relevant standard operating procedures</TAG>
                <VALUE>${row['relevant standard operating procedures']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'number of standard tRNAs extracted')">
            <SAMPLE_ATTRIBUTE>
                <TAG>number of standard tRNAs extracted</TAG>
                <VALUE>${row['number of standard tRNAs extracted']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'feature prediction')">
            <SAMPLE_ATTRIBUTE>
                <TAG>feature prediction</TAG>
                <VALUE>${row['feature prediction']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'similarity search method')">
            <SAMPLE_ATTRIBUTE>
                <TAG>similarity search method</TAG>
                <VALUE>${row['similarity search method']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, '16s recovered')">
            <SAMPLE_ATTRIBUTE>
                <TAG>16s recovered</TAG>
                <VALUE>${row['16s recovered']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, '16S recovery software')">
            <SAMPLE_ATTRIBUTE>
                <TAG>16S recovery software</TAG>
                <VALUE>${row['16S recovery software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'tRNA extraction software')">
            <SAMPLE_ATTRIBUTE>
                <TAG>tRNA extraction software</TAG>
                <VALUE>${row['tRNA extraction software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'completeness score')">
            <SAMPLE_ATTRIBUTE>
                <TAG>completeness score</TAG>
                <VALUE>${row['completeness score']}</VALUE>
                <UNITS>%</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'completeness software')">
            <SAMPLE_ATTRIBUTE>
                <TAG>completeness software</TAG>
                <VALUE>${row['completeness software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'completeness approach')">
            <SAMPLE_ATTRIBUTE>
                <TAG>completeness approach</TAG>
                <VALUE>${row['completeness approach']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'contamination score')">
            <SAMPLE_ATTRIBUTE>
                <TAG>contamination score</TAG>
                <VALUE>${row['contamination score']}</VALUE>
                <UNITS>%</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'contamination screening input')">
            <SAMPLE_ATTRIBUTE>
                <TAG>contamination screening input</TAG>
                <VALUE>${row['contamination screening input']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'contamination screening parameters')">
            <SAMPLE_ATTRIBUTE>
                <TAG>contamination screening parameters</TAG>
                <VALUE>${row['contamination screening parameters']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'decontamination software')">
            <SAMPLE_ATTRIBUTE>
                <TAG>decontamination software</TAG>
                <VALUE>${row['decontamination software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'assembly quality')">
            <SAMPLE_ATTRIBUTE>
                <TAG>assembly quality</TAG>
                <VALUE>${row['assembly quality']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'taxonomic identity marker')">
            <SAMPLE_ATTRIBUTE>
                <TAG>taxonomic identity marker</TAG>
                <VALUE>${row['taxonomic identity marker']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'isolation_source', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>isolation_source</TAG>
                <VALUE>${row['isolation_source']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'collection date', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>collection date</TAG>
                <VALUE>${row['collection date']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'altitude')">
            <SAMPLE_ATTRIBUTE>
                <TAG>altitude</TAG>
                <VALUE>${row['altitude']}</VALUE>
                <UNITS>m</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'geographic location (country and/or sea)', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic location (country and/or sea)</TAG>
                <VALUE>${row['geographic location (country and/or sea)']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'geographic location (latitude)', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic location (latitude)</TAG>
                <VALUE>${row['geographic location (latitude)']}</VALUE>
                <UNITS>DD</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'geographic location (longitude)', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic location (longitude)</TAG>
                <VALUE>${row['geographic location (longitude)']}</VALUE>
                <UNITS>DD</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'geographic location (region and locality)')">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic location (region and locality)</TAG>
                <VALUE>${row['geographic location (region and locality)']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'broad-scale environmental context', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>broad-scale environmental context</TAG>
                <VALUE>${row['broad-scale environmental context']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'local environmental context', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>local environmental context</TAG>
                <VALUE>${row['local environmental context']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'environmental medium', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>environmental medium</TAG>
                <VALUE>${row['environmental medium']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'elevation')">
            <SAMPLE_ATTRIBUTE>
                <TAG>elevation</TAG>
                <VALUE>${row['elevation']}</VALUE>
                <UNITS>m</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'amount or size of sample collected')">
            <SAMPLE_ATTRIBUTE>
                <TAG>amount or size of sample collected</TAG>
                <VALUE>${row['amount or size of sample collected']}</VALUE>
                <UNITS>m3</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'size fraction selected')">
            <SAMPLE_ATTRIBUTE>
                <TAG>size fraction selected</TAG>
                <VALUE>${row['size fraction selected']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'source material identifiers')">
            <SAMPLE_ATTRIBUTE>
                <TAG>source material identifiers</TAG>
                <VALUE>${row['source material identifiers']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'experimental factor')">
            <SAMPLE_ATTRIBUTE>
                <TAG>experimental factor</TAG>
                <VALUE>${row['experimental factor']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'taxonomic classification')">
            <SAMPLE_ATTRIBUTE>
                <TAG>taxonomic classification</TAG>
                <VALUE>${row['taxonomic classification']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'annotation source')">
            <SAMPLE_ATTRIBUTE>
                <TAG>annotation source</TAG>
                <VALUE>${row['annotation source']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'reference for biomaterial')">
            <SAMPLE_ATTRIBUTE>
                <TAG>reference for biomaterial</TAG>
                <VALUE>${row['reference for biomaterial']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'reference database(s)')">
            <SAMPLE_ATTRIBUTE>
                <TAG>reference database(s)</TAG>
                <VALUE>${row['reference database(s)']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'single cell or viral particle lysis approach', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>single cell or viral particle lysis approach</TAG>
                <VALUE>${row['single cell or viral particle lysis approach']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'single cell or viral particle lysis kit protocol')">
            <SAMPLE_ATTRIBUTE>
                <TAG>single cell or viral particle lysis kit protocol</TAG>
                <VALUE>${row['single cell or viral particle lysis kit protocol']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample material processing')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample material processing</TAG>
                <VALUE>${row['sample material processing']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'nucleic acid extraction')">
            <SAMPLE_ATTRIBUTE>
                <TAG>nucleic acid extraction</TAG>
                <VALUE>${row['nucleic acid extraction']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'nucleic acid amplification')">
            <SAMPLE_ATTRIBUTE>
                <TAG>nucleic acid amplification</TAG>
                <VALUE>${row['nucleic acid amplification']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'library size')">
            <SAMPLE_ATTRIBUTE>
                <TAG>library size</TAG>
                <VALUE>${row['library size']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'library reads sequenced')">
            <SAMPLE_ATTRIBUTE>
                <TAG>library reads sequenced</TAG>
                <VALUE>${row['library reads sequenced']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'library vector')">
            <SAMPLE_ATTRIBUTE>
                <TAG>library vector</TAG>
                <VALUE>${row['library vector']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'library screening strategy')">
            <SAMPLE_ATTRIBUTE>
                <TAG>library screening strategy</TAG>
                <VALUE>${row['library screening strategy']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'assembly software')">
            <SAMPLE_ATTRIBUTE>
                <TAG>assembly software</TAG>
                <VALUE>${row['assembly software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'WGA amplification approach', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>WGA amplification approach</TAG>
                <VALUE>${row['WGA amplification approach']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'WGA amplification kit')">
            <SAMPLE_ATTRIBUTE>
                <TAG>WGA amplification kit</TAG>
                <VALUE>${row['WGA amplification kit']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'sorting technology', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>sorting technology</TAG>
                <VALUE>${row['sorting technology']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'adapters')">
            <SAMPLE_ATTRIBUTE>
                <TAG>adapters</TAG>
                <VALUE>${row['adapters']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'depth')">
            <SAMPLE_ATTRIBUTE>
                <TAG>depth</TAG>
                <VALUE>${row['depth']}</VALUE>
                <UNITS>mm</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <SAMPLE_ATTRIBUTE>
                <TAG>SUBMISSION_TOOL</TAG>
                <VALUE>${tool_name}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>SUBMISSION_TOOL_VERSION</TAG>
                <VALUE>${tool_version}</VALUE>
            </SAMPLE_ATTRIBUTE>
        </SAMPLE_ATTRIBUTES>
    </SAMPLE>
    </py:for>
</SAMPLE_SET>